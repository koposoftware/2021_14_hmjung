<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="account.AccountDAO">

	<resultMap type="accountVO" id="accountMap">
		<result column="gca_number" property="gcaNumber"></result>
		<result column="gca_password" property="gcaPassword"></result>
		<result column="reg_date" property="regDate"></result>	
	</resultMap>
	
	<resultMap type="leagueAccountVO" id="leagueAccountMap">
		<result column="reg_date" property="regDate"></result>
		<result column="follow_price" property="followPrice"></result>
	</resultMap>

	<resultMap type="leagueFollowVO" id="leagueFollowMap">
		<result column="follow_date" property="followDate"></result>
		<result column="follower_id" property="followerId"></result>
		<result column="followed_id" property="followedId"></result>
		<result column="follow_price" property="followPrice"></result>		
	</resultMap>
	
	<resultMap type="accountStockVO" id="accountStockMap">
		<result column="gca_number" property="gcaNumber"></result>
		<result column="total_counts" property="totalCounts"></result>
		<result column="spent_total" property="spentTotal"></result>
		<result column="earned_total" property="earnedTotal"></result>	
	</resultMap>
	
	<resultMap type="accountStockLogVO" id="accountStockLogMap">
		<result column="gca_number" property="gcaNumber"></result>
		<result column="pre_balance" property="preBalance"></result>
		<result column="post_balance" property="postBalance"></result>
		<result column="moment_price" property="momentPrice"></result>
	</resultMap>			
	
	<select id="selectLeagueAcc" resultMap="leagueAccountMap" parameterType="string">
		select id , balance , reg_date , tier , follow_price from gc_league where id = #{id}
	</select>
	
	<select id="selectFollowers" resultMap="leagueFollowMap" parameterType="string">
		select * from gc_league_follow where followed_id = #{id}
	</select>
		
	<select id="selectmyfollow" resultMap="leagueFollowMap" parameterType="string">
		select * from gc_league_follow where follower_id = #{id}
	</select>
		
	
	<insert id="createAcc" parameterType="accountVO">
		insert into gc_account(gca_number, nick, id, gca_password, balance ) 
		values(#{gcaNumber} , #{nick, jdbcType=VARCHAR}  , #{id} , #{gcaPassword},  #{balance} )
	</insert>		
	
	<insert id="createLeagueAcc" parameterType="leagueAccountVO">
		insert into gc_league(id, balance, tier, follow_price) 
		values(#{id} , #{balance}  , #{tier} , #{followPrice})
	</insert>
	

	<select id="selectByAccNum" resultMap="accountMap" parameterType="string">
		select gca_number, nick, id, gca_password, balance, to_char(reg_date , 'yyyy-mm-dd') as reg_date		
		from gc_account where gca_number = #{gca_number}
	</select>
	
	
	<select id="selectAllAccounts" resultMap="accountMap" parameterType="string">
		select gca_number, id, nick, gca_password, balance, to_char(reg_date , 'yyyy-mm-dd') as reg_date
		from gc_account where id = #{id}
	</select>
	
	<select id="signinAccount" resultMap="accountMap" parameterType="accountVO">
		select gca_number, nick, id, gca_password, balance, to_char(reg_date , 'yyyy-mm-dd') as reg_date
		from gc_account
		where id = #{id , jdbcType=VARCHAR} and gca_number = #{gcaNumber, jdbcType=VARCHAR} and gca_password = #{gcaPassword, jdbcType=VARCHAR}		
	</select>
	
	
	<update id="transactAccount" parameterType="hashMap">
		UPDATE GC_ACCOUNT SET BALANCE = BALANCE + #{totalPrice}  WHERE gca_number = #{gcaNumber}
	</update>	

	
	<update id="transactAccountLeague" parameterType="hashMap">
		 UPDATE GC_LEAGUE SET BALANCE = BALANCE + #{totalPrice}  WHERE ID = #{gcaNumber}
	</update >

	
	<update id="transactAccountStock" parameterType="hashMap">
		  MERGE INTO 
	         gc_account_stock
	    USING DUAL 
	        ON (gca_number  = #{gcaNumber} AND symbol  = #{symbol})
	    WHEN MATCHED THEN    
	        UPDATE SET  
	            total_counts= total_counts + #{counts},
	            SPENT_TOTAL = SPENT_TOTAL -  LEAST( #{totalPrice} , 0) ,
	            EARNED_TOTAL = EARNED_TOTAL + GREATEST( #{totalPrice} , 0)              
	    WHEN NOT MATCHED THEN
	        INSERT 
	            (GCA_NUMBER, SYMBOL, TOTAL_COUNTS , SPENT_TOTAL, EARNED_TOTAL)
	        VALUES
	            (#{gcaNumber} , #{symbol} ,  #{counts}  , ABS(#{totalPrice})  , 0  )	
	</update>
	
	<insert id="transactAccountStockLog" parameterType="hashMap">
		  INSERT INTO GC_ACCOUNT_STOCK_LOG(GCA_NUMBER,SYMBOL,ACTION,PRE_BALANCE,POST_BALANCE,COUNTS,MOMENT_PRICE)
	    VALUES( #{gcaNumber} , #{symbol} , #{action} , #{preBalance} , #{preBalance}  +  #{totalPrice}, ABS(#{counts})  ,#{price} )
	</insert>
	

	<select id="getAllAccountStockVO" parameterType="string" resultMap="accountStockMap">
		select * from gc_account_stock where gca_number = #{key}	
	</select>	
		
	<select id="getAllAccountStockLog" parameterType="string" resultMap= "accountStockLogMap">
		select * from gc_account_stock_log where gca_number = #{key} order by time desc
	</select>
	
	<select id="getAllAccountStockLogsType" parameterType="hashMap" resultMap= "accountStockLogMap">
		select * from gc_account_stock_log where gca_number = #{key} and action= #{type}
	</select>
	
	<insert id="subscribeUser" parameterType="leagueFollowVO">
		insert into gc_league_follow ( follower_id , followed_id , follow_price  )
		values( #{followerId} ,   #{followedId } ,  #{followPrice}  )	
	</insert>
	
	<delete id="unSubscribeUser" parameterType="leagueFollowVO">
		delete from gc_league_follow where follower_id = #{followerId} and  followed_id  =  #{followedId}	
	</delete>
	
		
			
</mapper>