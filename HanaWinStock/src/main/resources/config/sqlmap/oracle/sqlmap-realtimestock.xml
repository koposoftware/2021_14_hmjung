<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="realtimestock.RealTimeStockDAO">		
	<resultMap type="realTimeStockVO" id="realTimeStockMap">
		<result column="market_price" property="marketPrice" ></result>
		<result column="share_outstanding" property="shareOutstanding" ></result>
		<result column="avg_daily_volume10day" property="avgDailyVolume10day" ></result>
		<result column="avg_daily_volume3month" property="avgDailyVolume3month" ></result>
		<result column="dividends_per_share" property="dividendsPerShare" ></result>
		<result column="bid_size" property="bidSize" ></result>
		<result column="ask_size" property="askSize" ></result>
		<result column="floating_shares" property="floatingShares" ></result>
		<result column="short_ratio" property="shortRatio" ></result>
		<result column="eps_forward" property="epsForward" ></result>
		<result column="book_value" property="bookValue" ></result>
		<result column="shares_short" property="sharesShort" ></result>
		<result column="diviidends_yield" property="dividendsYield" ></result>
		<result column="market_change" property="marketChange" ></result>
		<result column="market_change_percent" property="marketChangePercent" ></result>
		<result column="market_day_high" property="marketDayHigh" ></result>
		<result column="market_day_low" property="marketDayLow" ></result>
		<result column="market_volume" property="marketVolume" ></result>
		<result column="unix_time" property="unixTime"></result>
	</resultMap>
	
	<resultMap type="HashMap" id="initValues">
		<id column="max_value" property="max_value"/>
		<id column="min_value" property="min_value"/>
		<id column="min_created" property="min_created"/>
		<id column="max_created" property="max_created"/>
		<id column="grp_id" property="grp_id"/>
		<id column="symbol" property="symbol"/>
		<id column="min_created_value" property="min_created_value"/>
		<id column="max_created_value" property="max_created_value"/>
		<id column="max_vol" property="max_vol"/>
		<id column="avg_price" property="avg_price"/>
	</resultMap>
	
	
	
	
	
	<select id="getInitValues" resultMap="initValues" parameterType="hashMap">
		with extracted as (select symbol, bid, ask, market_price,  unix_time , market_volume from gc_realtime_stock where unix_time between #{startTime} and #{endTime}   and symbol = #{symbolList})
		select l.*, j.market_price as max_created_value from extracted j  inner join (
		select k.* ,  p.market_price as min_created_value from extracted p   inner join 
		(select trunc(avg(market_price),2) avg_price, max(market_volume) max_vol , max(ask) max_value , min(bid) min_value , min(unix_time) min_created,  max(unix_time) max_created , grp_id , symbol from(
		select market_volume , symbol, market_price,  bid, ask,  unix_time,  #{interval}  * trunc( unix_time / #{interval}   )    as grp_id   from extracted ) group by grp_id , symbol order by grp_id ) k
		on p.unix_time  = k.min_created and p.symbol = k.symbol) l on j.unix_time = l.max_created and j.symbol = l.symbol
		order by grp_id
	</select>
	
	<select id="getInitValuesLines" resultMap="initValues" parameterType="hashMap">
		with extracted as (select symbol, market_price,  unix_time , market_volume from gc_realtime_stock where unix_time between #{startTime} and #{endTime}  and symbol = #{symbolList})
		select l.*, j.market_price as max_created_value from extracted j  inner join (
		select k.* ,  p.market_price as min_created_value from extracted p   inner join 
		(select trunc(avg(market_price),2) avg_price, max(market_volume) max_vol , max(market_price) max_value , min(market_price) min_value , min(unix_time) min_created,  max(unix_time) max_created , grp_id , symbol from(
		select market_volume , symbol, market_price, unix_time,  #{interval}  * trunc( unix_time / #{interval}   )    as grp_id   from extracted ) group by grp_id , symbol order by grp_id ) k
		on p.unix_time  = k.min_created and p.symbol = k.symbol) l on j.unix_time = l.max_created and j.symbol = l.symbol
		order by grp_id
	</select>
	

	<select id="selectByTimeRange" resultMap="realTimeStockMap" parameterType="hashMap">
		select unix_time, time , symbol , market_price , bid , ask , bid_size, ask_size , market_volume
		from gc_realtime_stock where time between to_date(#{start}, 'yyyy-MM-DD-HH24:MI:SS')  
		and to_date(#{end}, 'yyyy-MM-DD-HH24:MI:SS')
	</select>

	
	<select id="selectByTimeRangeSymbols" resultMap="realTimeStockMap" parameterType="hashMap">
		SELECT unix_time, time , symbol , market_price , bid , ask , bid_size, ask_size , market_volume , floating_shares , market_change_percent  
		FROM gc_realtime_stock where inorder in (SELECT max(inorder) FROM gc_realtime_stock where  
		time between to_date(#{start}, 'yyyy-MM-DD-HH24:MI:SS')  
		and to_date(#{end}, 'yyyy-MM-DD-HH24:MI:SS') and symbol in
		<foreach collection="symbolList" item="arr" open="(" close=")" separator=",">
		 #{arr}
		</foreach>		
		GROUP BY symbol ) order by inorder desc
	</select>
	
	
	<select id="getRealTimeStockData" resultMap="realTimeStockMap" parameterType="hashMap">
		SELECT * from gc_realtime_stock where unix_time between #{startTime} and #{endTime}  and symbol = #{symbol}		
	</select>
	
	
	
	
	
</mapper>